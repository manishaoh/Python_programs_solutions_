# -*- coding: utf-8 -*-
"""Untitled33.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1At3NqZK1B4Hc0qfCXdv-bmj4F0h-CqTS
"""

# Reverse a string
def rev_string(a):
  return a[::-1]

rev_string("scaler")

# fibonnaci series
def fibonnaci(n):
  if n<=1:
    return n
  else:
    return fibonnaci(n-1)+fibonnaci(n-2)

n=int(input())
for i in range(n):
  print(fibonnaci(i), end=" ")

# Find all prime numbers in a given range.
import math
def is_prime(n):
  if n<=1:
    return False
  for i in range(2, int(math.sqrt(n))+1):
    if n%i==0:
      return False
  return True

def find_primes_in_range(start,end):
  primes=[]
  for num in range(start, end+1):
    if is_prime(num):
      primes.append(num)
  return primes

start=int(input())
end=int(input())
find_primes_in_range(start, end)

# Determine if two strings are anagrams of each other

def is_anagram(s,s1):
  if len(s)==len(s1):
    if sorted(s)==sorted(s1):
      return True
  return False

is_anagram("sos","oss")

# Identify duplicate elements in a list

def find_duplicates(a):
    duplicates = []
    n = len(a)
    for i in range(n):
        for j in range(i + 1, n):  # Start from i+1 to avoid self-comparison and redundant checks
            if a[i] == a[j] and a[i] not in duplicates:
                duplicates.append(a[i])
    return duplicates

a=list(map(int,input().split()))
find_duplicates(a)
